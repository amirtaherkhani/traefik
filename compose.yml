services:
  traefik:
    image: traefik:latest
    container_name: traefik
    hostname: traefik-server
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    network_mode: host  # Use host network mode
#    ports:
#       - 80:80
#       - 443:433
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/localtime:/etc/localtime:ro
      - ./src/data/logs:/var/log/traefik/
      - ./src/configs/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./src/configs/dynamic.yml:/etc/traefik/dynamic.yml:ro
      - ./src/certs/acme.json:/etc/traefik/certs/acme.json
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik.entrypoints=web
      - traefik.http.routers.traefik.rule=Host(`traefik.${DOMAIN_NAME}`)
      - traefik.http.routers.traefik-secure.entrypoints=websecure
      - traefik.http.routers.traefik-secure.rule=Host(`traefik.${DOMAIN_NAME}`)
      - traefik.http.routers.traefik-secure.tls=true
      - traefik.http.routers.traefik-secure.tls.certresolver=letsencrypt
      - traefik.http.routers.traefik-secure.service=api@internal
      - traefik.http.services.traefik.loadbalancer.server.port=8080
      - traefik.http.middlewares.cors-headers.headers.accessControlAllowOriginList=*
      - traefik.http.middlewares.cors-headers.headers.accessControlAllowHeaders=Origin, X-Requested-With, Content-Type, Accept, Authorization
      - traefik.http.middlewares.cors-headers.headers.accessControlAllowMethods=GET, POST, PUT, DELETE, OPTIONS
#    networks:
#      - traefik-network
#networks:
#  traefik-network:
#    name: traefik-network
#    external: true
